/// Returns whether `$value` is "false" in a broader sense than by using
/// the not keyword, which only tests for `false` and `null` conditions. This
/// is the opposite of the is-true function.
///
/// In Sass, empty strings and empty lists are all "truthy" and sometimes you
/// may want to check if something is false in the more traditional sense.
///
/// @access public
///
/// @param {*} $value - A value to check.
///
/// @return {Bool} Returns `true` if `$value` is false (not just having falsiness).
@function is-false($value) {
  @return not $value or $value == '' or $value == () or $value == (());
}
