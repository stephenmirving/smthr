@use 'sass:meta';
@use 'sass:string';
@use '../../variables/misc' as *;
@use '../../functions/is-alias' as *;
@use '../../functions/is-string' as *;

/// Used by the `caret()` mixin to make a down-facing caret.
///
/// @group Utilities
/// @access private
/// @require {variable} $caret-width
@mixin _caret-down {
  border-top: $caret-width solid;
  border-right: $caret-width solid transparent;
  border-bottom: 0;
  border-left: $caret-width solid transparent;
}

/// Used by the `caret()` mixin to make an up-facing caret.
///
/// @group Utilities
/// @access private
/// @require {variable} $caret-width
@mixin _caret-up {
  border-top: 0;
  border-right: $caret-width solid transparent;
  border-bottom: $caret-width solid;
  border-left: $caret-width solid transparent;
}

/// Used by the `caret()` mixin to make a right-facing caret.
///
/// @group Utilities
/// @access private
/// @require {variable} $caret-width
@mixin _caret-right {
  border-top: $caret-width solid transparent;
  border-bottom: $caret-width solid transparent;
  border-left: $caret-width solid;
}

/// Used by the `caret()` mixin to make a left-facing caret.
///
/// @group Utilities
/// @access private
/// @require {variable} $caret-width
@mixin _caret-left {
  border-top: $caret-width solid transparent;
  border-right: $caret-width solid;
  border-bottom: $caret-width solid transparent;
}


/// Add a caret using pseudo-elements that can face up, down, left, or right.
///
/// @param {String} $point ['down'] - The desired direction for the caret
/// to face. Can be either `up`, `down`, `left`, or `right`. Can also be any
/// of the aliases for these values.
///
/// @group Utilities
/// @require {function} is-alias
/// @require {function} is-string
/// @require {variable} $caret-width
@mixin caret($point: 'down') {
  @if $point and is-string($point) {
    $point: string.to-lower-case($point);
  }

  &::after {
    content: '';
    display: inline-block;
    vertical-align: $caret-width * 0.85;
    width: 0;
    height: 0;
    margin-left: $caret-width * 0.85;

    @if is-alias('bottom', $point) {
      @include _caret-down;
    } @else if is-alias('top', $point) {
      @include _caret-up;
    } @else if is-alias('right', $point) {
      @include _caret-right;
    } @else if not is-alias('left', $point) {
      @error 'Invalid $point value passed to the [ caret() ] mixin. ' +
          'Value must be either \'up\', \'down\', \'left\', or \'right\'.';
    }
  }

  @if is-alias('left', $point) {
    &::after {
      display: none;
    }

    &::before {
      content: '';
      display: inline-block;
      vertical-align: $caret-width * 0.85;
      width: 0;
      height: 0;
      margin-right: $caret-width * 0.85;

      @include _caret-left;
    }
  }

  &:empty::after {
    margin-left: 0;
  }
}
