@use 'sass:math';
@use 'sass:meta';
@use 'sass:string';
@use '../../functions/is-alias';
@use '../../functions/is-string';

/// Creates an inner box-shadow for only one side of an element.
///
/// @param {String} $side [bottom] - Side the shadow is supposed to appear.
/// Can be `top`, `left`, `right` or `bottom`.
/// @param {Number} $size [20px] - The width of the shadow on the target side.
/// @param {Color} $color [hsl(0 0% 0 / 0.3] - The color of the shadow.
///
/// @group Utilities
@mixin inner-side-shadow(
  $side: 'bottom',
  $size: 20px,
  $color: hsla(0, 0%, 0%, 0.3)
) {
  @if math.is-unitless($size) {
    $size: $size * 1px;
  }

  @if is-string($side) {
    $side: string.to-lower-case($side);
  }

  $helper: math.round($size * 0.65);

  @if is-alias('top', $side) {
    box-shadow: inset 0 $helper $size (-1) * $helper $color;
  } @else if is-alias('left', $side) {
    box-shadow: inset $helper 0 $size (-1) * $helper $color;
  } @else if is-alias('right', $side) {
    box-shadow: inset (-1) * $helper 0 $size (-1) * $helper $color;
  } @else if is-alias('bottom', $side) {
    box-shadow: inset 0 (-1) * $helper $size (-1) * $helper $color;
  } @else {
    @error 'Invalid side value of `#{meta.inspect($side)}` for the ' +
        '[ inner-side-shadow() ] mixin.';
  }
}
