@use '../../functions/is-length' as *;
@use '../../functions/is-absolute-length' as *;
@use '../../functions/is-calculation' as *;
@use '../../variables/misc' as smth;

/// Quickly the adds some default properties for a container element.
///
/// @param {Number | Calculation} $padding-x [1rem] - The x padding of the
/// container on device sizes below 768px.
/// @param {Number | Calculation} $max-width [smth.$max-inline-size] - The max
/// width (or max inline size) of the container. If passed explicitly and not
/// relying on the $max-inline-size variable, it is recommended to pass an
/// absolute length or a calculation that will produce one.
/// @param {Bool} $is-logical [false] - If `true`, will use logical size
/// properties of `inline-size`, `max-inline-size`, `padding-block` and
/// `padding-inline` rather than the physical properties of `width`,
/// `max-width`, and `padding` used when nothing is passed, or if `false` or
/// `null` are passed explicitly.
///
/// @group Utilities
/// @require {function} is-absolute-length
/// @require {function} is-calculation
/// @require {function} is-length
/// @require {variable} $max-inline-size
///
/// @throw Error, $padding-x is not a length and not a caluclation.
/// @throw Error, $max-width is not a length and not a calculation.
/// @throw Warning, $max-height is not an absolute length and not a calculation.
@mixin container($padding-x, $max-width: smth.$max-inline-size, $is-logical: false) {
  @if not is-length($padding-x) and not is-calculation($padding-x) {
    @error 'Invalid data type for the $padding-x parameter passed to the ' +
        '[ container() ] mixin. Please ensure that you use pass a length or ' +
        'a calculation for a length';
  }

  @if not is-length($max-width) and not is-calculation($max-width) {
    @error 'Invalid data type for the $max-width parameter passed to the ' +
        '[ container() ] mixin. Please ensure that you use pass a length or ' +
        'a calculation for a length';
  }

  @if not is-absolute-length($max-width) and not is-calculation($max-width) {
    @warn 'You may want to set the $max-width value of the [ container() ] ' +
        'mixin to be an absolute length or a calculation that produces an ' +
        'absolute length.';
  }

  @if not $is-logical {
    width: 100%;
    padding: 0 $padding-x;
    margin: 0 auto;
  } @else {
    inline-size: 100%;
    padding-block-start: 0;
    padding-block-end: 0;
    padding-inline-start: $padding-x;
    padding-inline-end: $padding-x;
  }

  @media screen and (min-width: 48em) {
    @if not $is-logical {
      max-width: min(96%, $max-width);
    } @else {
      max-inline-size: min(96%, $max-width);
    }

    padding: 0;
  }
}
