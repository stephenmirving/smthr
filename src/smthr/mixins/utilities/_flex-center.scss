@use 'sass:meta';
@use 'sass:string';
@use '../../functions/equals-false' as *;
@use '../../functions/equals-true' as *;
@use '../../functions/is-alias' as *;
@use '../../functions/is-global-value' as *;
@use '../../functions/is-list' as *;
@use '../../functions/is-string' as *;
@use '../../functions/list-to-string' as *;

/// Uses flexbox to vertically and/or horizontally center an element, as well as
/// set its flex-direction property.
///
/// @param {Bool | String} $horizontal [true] - Pass `true` or `horizontal` to
/// center the contents horizontally.
/// @param {Bool | String} $vertical [true] - Pass `true` or `vertical` to
/// center the contents vertically.
/// @param {String} $flex-dir ['row'] - The flex-direction value.
///
/// @group Utilities
/// @require {function} equals-false
/// @require {function} equals-true
/// @require {function} is-alias
/// @require {function} is-global-value
/// @require {function} is-list
/// @require {function} is-string
/// @require {function} list-to-string
///
/// @throw Invalid $horizontal value error.
/// @throw Invalid $vertical value error.
/// @throw Invalid $flex-dir value error.
@mixin flex-center($horizontal: true, $vertical: true, $flex-dir: null) {
  $swap: null;
  $orientation: 'horizontal';

  @if $horizontal and is-string($horizontal) {
    $horizontal: string.to-lower-case($horizontal);
  }

  @if $vertical and is-string($vertical) {
    $vertical: string.to-lower-case($vertical);
  }

  @if equals-true($horizontal) or $horizontal == 't' or
      is-alias('left-to-right', $horizontal) or
      $horizontal == 'yes' or $horizontal == 'y'
  {
    $horizontal: true;
  } @else if equals-false($horizontal) or $horizontal == 'f' or
      is-alias('none', $horizontal)
  {
    $horizontal: false;
  } @else {
    @error 'Invalid $horizontal value for the [ flex-center() ] mixin. ' +
        'You must pass either true or false.';
  }

  @if equals-true($vertical) or $vertical == 't' or
      is-alias('top-to-bottom', $vertical) or $vertical == 'yes' or
      $vertical == 'y'
  {
    $vertical: true;
  } @else if equals-false($vertical) or $vertical == 'f' or
      is-alias('none', $vertical) {
    $vertical: false;
  } @else {
    @error 'Invalid $vertical value for the [ flex-center() ] mixin. ' +
        'You must pass either true or false.';
  }

  display: flex;

  @if $flex-dir {
    @if is-list($flex-dir) {
      $flex-dir: list-to-string($flex-dir);
    }

    @if is-string($flex-dir) {
      $flex-dir: string.to-lower-case($flex-dir);
    }

    @if is-alias('row-reverse', $flex-dir) {
      $flex-dir: row-reverse;
    } @else if is-alias('column', $flex-dir) or
        is-alias('top-to-bottom', $flex-dir) or
        $flex-dir == 'c'
    {
      $flex-dir: column;
      $orientation: 'vertical';
    } @else if is-alias('column-reverse', $flex-dir) {
      $flex-dir: column-reverse;
      $orientation: 'vertical';
    } @else if $flex-dir == 'row' or $flex-dir == 'r' or
      is-alias('normal', $flex-dir) or
      is-alias('left-to-right', $flex-dir)
    {
      $flex-dir: row;
    } @else if not is-global-value($flex-dir) {
      @error 'Invalid $flex-dir value of #{meta.inspect($flex-dir)} passed ' +
          'to the [ flex-center() ] mixin.';
    }

    @if $orientation == 'vertical' {
      $swap: $horizontal;
      $horizontal: $vertical;
      $vertical: $swap;
    }

    flex-direction: #{$flex-dir};
  }

  @if $vertical {
    align-items: center;
  }

  @if $horizontal {
    justify-content: center;
  }
}
