@use 'sass:meta';
@use 'sass:math';
@use '../variables' as *;

/// Converts a pixel value into em units.
/// @access public
///
/// @param {Length-Percentage} $pixels - A value to convert to em units.
/// @param {Number} $base-context [null] - The contextual base font-size.
/// @return {Length} The values in em.
///
/// @require {function} strip-unit
/// @throw Invalid data type or units for $pixels
@function conv-to-em($pixels, $base-context: null) {
  @if meta.type-of($pixels) !=
    'number' or
    (
      meta.type-of($pixels) ==
        'number' and not
        math.is-unitless($pixels) and
        math.unit($pixels) !=
        'px'
    )
  {
    @error 'Invalid value of [ #{meta.inspect($pixels)} ] passed to the ' +
        '[ conv-to-em() ] function. Value of $pixels must be number in px units.';
  }

  // If no base is defined, defer to the $base-font-size variable. If that does
  // not exist, default to 16
  @if not $base-context {
    $base-context: if(
      meta.variable-exists('base-font-size') or
        meta.global-variable-exists('base-font-size', smth),
      $base-font-size,
      16
    );
  }

  @if math.is-unitless($pixels) {
    $pixels: $pixels * 1px;
  }

  @if math.is-unitless($base-context) {
    $base-context: $base-context * 1px;
  }

  @return math.div($pixels, $base-context) * 1em;
}
