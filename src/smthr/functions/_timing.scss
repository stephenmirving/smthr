@use 'sass:meta';
@use 'sass:map';
@use '../variables/maps' as *;

/// Takes a name for a custom timing function and return the associated
/// cubic-bezier curve.
///
/// @param {String} $func-name - The name of the custom timing function.
/// @param {Map} $alias-map [$map-timing-functions] - The map containing the
/// custom timing functions.
///
/// @return {Function} The cubic-bezier curve
///
/// @example animation: fade-in 2s timing(ease-in-quad) 50ms both
///
/// @require {variable} $map-timing-functions
///
/// @throw Invalid $func-name type.
/// @throw Invalid $alias-map type.
/// @throw Function name not found in alias map.
@function timing($func-name, $alias-map: $map-timing-functions) {
  @if meta.type-of($func-name) != 'string' {
    @error 'Invalid data type of [ #{meta.type-of($func-name)} ] for $func-name ' +
        'passed to the [ timing() ] function. The data type of $func-name must ' +
        'be a string.';
  }

  @if meta.type-of($alias-map) != 'map' {
    @error 'Invalid data type of [ #{meta.type-of($alias-map)} ] for ' +
        '$alias-map passed to the [ timing ] function. The data type ' +
        'of $alias-map must be a map.';
  }

  $timing-function: map.get($alias-map, $func-name);

  @if not $timing-function {
    @error 'The timing function name passed to the [ timing() ] function ' +
        'could not be found in the given alias map.';
  } @else {
    @return $timing-function;
  }
}
