@use 'sass:meta';
@use 'sass:string';

/// A simply asset file location builder.
/// @access private
///
/// @param {String} $type - Asset type, matching folder name
/// @param {String} $file - Asset file name, including extension
///
/// @return {String} A file location leading to the asset.
/// @require {variable} $asset-base-path
@function asset($type, $file) {
  $asset-path: if(
    meta.global-variable-exists(asset-base-path),
    $asset-base-path,
    '../assets'
  );

  @return string.unquote($asset-path + '/' + $type + '/' + $file);
}

/// Image asset helper
/// @access public
///
/// @param {String} $file - Asset file name, including extension
/// @return {String} A file location leading to the asset.
///
/// @require {function} asset
@function image($file) {
  @return asset('img', $file);
}

/// Font asset helper
/// @access public
///
/// @param {String} $file - Asset file name, including extension
/// @return {String} A file location leading to the asset.
///
/// @require {function} asset
@function font($file) {
  @return asset('fonts', $file);
}
