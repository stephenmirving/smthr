////////////////////////////////////////////////////////////////////////////////
/// ------------------------------------------------------------------------ ///
/// betterize.scss -- Modern normalization for better cross-browser design - ///
/// Special version designed for use with the Smoother library ------------- ///
/// @author Stephen M Irving -- <@metric_dev> ------------------------------ ///
/// version 1.2.2 -- 03/16/2024 -------------------------------------------- ///
/// ------------------------------------------------------------------------ ///
////////////////////////////////////////////////////////////////////////////////


@use 'sass:meta';
@use 'sass:map';
@use 'sass:math';
@use '../smthr/smth' as smth;


////////////////////////////////////////////////////////////////////////////////
// -------------------------------------------------------------------------- //
// #BASE STYLES: opinionated defaults --------------------------------------- //
// -------------------------------------------------------------------------- //
////////////////////////////////////////////////////////////////////////////////


// 1. Set `box-sizing` to `inherit` while setting the inheritance root,
//    which is the html element, to `box-sizing: border-box`. This is
//    a much more intuitive default box-model than `content-box` as it
//    will make `width` and `height` calculations include `padding` and
//    `border` size.
// 2. Setting `min-width: 0` here is a VERY opinionated decision. It can save
//    you a lot of time trying to figure out a ton of odd and unintuitive
//    behavior, especially with flexbox, but it can also cause unexpected
//    issues if you aren't aware it is here.
// 3. Set background images to `no-repeat` which is a much better default

*,
::before,
::after {
  box-sizing: inherit; // 1
  min-width: 0; // 2
  background-repeat: no-repeat; // 3
}

// Improved default settings for the `::before` and `::after` pseudo-elements

::before,
::after {
  vertical-align: inherit;
  text-decoration: inherit;
}

//  1. Prevent horizontal scrolling from being possible and set vertical
//     scrolling. If you want a page with no scrollbar at all change
//     to `overflow: hidden`.
//  2. Set the root element box-sizing, the universal selector will inherit.
//  3. Improve consistency of default font in all browsers.
//  4. Set the default font size in an accessible way (such that a user
//     can change the default size with the browser settings).
//  5. Normalize default `line-height` across browsers.
//  6. Set a new default for `overflow-wrap` on the root element since it
//     is an inherited property.
//  7. Allow the browser to automatically break words at appropriate hyphenation
//     points. Ensure you specificy a language using the `lang` HTML attribute.
//     to guarantee the automatic hyphenation applied is language-specific.
//  8. Use a more readable tab size.
//  9. Resets the cursor to default across all browsers and for any property
//     that does not explicitly define a different cursor.
// 10. Tell the browser which color schemes the page can be rendered in.
//     Change to just `light` or just `dark` if only doing a single scheme,
//     but both are strongly recommended for accessibility purposes.
// 11. This will reserve space for a scrollbar, preventing unwanted layout
//     shifts as content grows or shrinks. If you are making a page that
//     has no scrolling whatsoever, you can remove or overwrite this rule.
// 12. Allows opening and closing punctuation like quotes at the start and end
//     of a line of text to "hang" outside the line's content box, making the
//     formatting look more aesthetically pleasing.
// 13. Remove the blue tap box over buttons and links in some versions of
//     WebKit browsers for touch-enabled devices.
// 14. Prevent adjustments of font size after orientation changes in iOS.
// 15. Setting @viewport causes scrollbars to overlap content in legacy Edge
//     and IE11, so force a non-overlapping, non-auto-hiding scrollbar.

html {
  $_root-font-size: 1em;

  @if meta.global-variable-exists('base-font-size', 'smth') {
    $_root-font-size: if(
      math.is-unitless(smth.$base-font-size),
      math.div(smth.$base-font-size, 16) * 1em,
      smth.$base-font-size
    );
  }

  overflow: hidden scroll; // 1
  box-sizing: border-box; // 2
  font-family: // 3
    // Newer browsers
    system-ui,
    // Safari for OS X and iOS (San Francisco)
    -apple-system,
    // Chrome < 56 for OS X (San Francisco)
    BlinkMacSystemFont,
    // Windows
    'Segoe UI',
    // Android
    Roboto,
    // Basic web fallback
    'Helvetica Neue',
    Helvetica,
    Arial,
    sans-serif,
    // Emoji fonts
    'Apple Color Emoji',
    'Segoe UI Emoji',
    'Segoe UI Symbol',
    'Noto Color Emoji';
  font-size: $_root-font-size; // 4
  line-height: 1.15; // 5
  overflow-wrap: break-word; // 6
  -webkit-hyphens: auto; // 7
  hyphens: auto; // 7
  -moz-tab-size: 4; // 8
  tab-size: 4; // 8
  cursor: default; // 9
  color-scheme: light dark; // 10
  scrollbar-gutter: stable; // 11
  hanging-punctuation: first last; // 12
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0); // 13
  -webkit-text-size-adjust: 100%; // 14
  -ms-overflow-style: scrollbar; // 15
}

// If user does not have prefers-reduced-motion on in their OS settings,
// this will keep scrolling from looking jumpy when an anchor link or other
// action automatically scrolls the page.

@media (prefers-reduced-motion: no-preference) {
  html {
    scroll-behavior: smooth;
  }

  // 1. May need to modify this value depending on height
  //    of any masthead/top nav bar or similar content
  :has(:target) {
    scroll-behavior: smooth;
    scroll-padding-top: 3rem; // 1
  }
}

// IE10+ doesn't honor `<meta name="viewport">` in some cases.

@at-root {
  @-ms-viewport {
    width: device-width;
  }
}

::-moz-selection {
  background: smth.$color-selection-highlight;
  color: smth.$color-selection-text;
  text-shadow: none;
}

::selection {
  background: smth.$color-selection-highlight;
  color: smth.$color-selection-text;
  text-shadow: none;
}

// 1. Remove the possibility of a horizontal scrollbar. Combined with the
//    `overflow: hidden scroll` on the html element, it prevents this behavior
//    without causing issues when a top level element is set to
//    `position: sticky`.
// 2. Force the body to always take up the whole screen.
// 3. Remove the body margin in all browsers.
// 4. Set a normal font-size default.
// 5. Set an opionated line-height for other elements to inherit.
// 6. Set an explicit `text-align: left` so that we can later use
//    the `inherit` value.
// 7. On devices with small screens (likely phone or tablet), set text-rendering
//    to improve speed. On devices with larger screens (likely laptops and PCs),
//    set text-rendering to improve legibility.
// 8. Ensure finer text rendering on Mac OS systems.

body {
  $_body-font-stack:
    // Newer browsers
    system-ui,
    // Safari for OS X and iOS (San Francisco)
    -apple-system,
    // Chrome < 56 for OS X (San Francisco)
    BlinkMacSystemFont,
    // Windows
    'Segoe UI',
    // Android
    Roboto,
    // Basic web fallback
    'Helvetica Neue',
    Helvetica,
    Arial,
    sans-serif,
    // Emoji fonts
    'Apple Color Emoji',
    'Segoe UI Emoji',
    'Segoe UI Symbol',
    'Noto Color Emoji';

  @if meta.function-exists('font-stack', 'smth') and
    meta.global-variable-exists('font-stacks', 'smth') and
    map.has-key(smth.$font-stacks, 'primary')
  {
    $_body-font-stack: smth.font-stack('primary');
  }

  overflow-x: clip; // 1
  min-height: 100vh; // 2
  min-height: 100dvh; // 2
  margin: 0; // 3
  background-color: smth.$color-body-bg;
  color: smth.$color-body;
  font-family: $_body-font-stack;
  font-size: smth.$body-font-size; // 4
  line-height: 1.5; // 5
  text-align: left; // 6
  text-rendering: optimizeSpeed; // 7

  @include smth.smooth-retina-fonts; // 8

  @include smth.only-over-width(1280px) {
    text-rendering: optimizeLegibility; // 7
  }
}

// Better balance blocks of text in headings, blockqutoes, and figure captions.
// See: https://developer.chrome.com/docs/css-ui/css-text-wrap-balance

h1,
h2,
h3,
h4,
h5,
h6,
blockquote,
figcaption {
  text-wrap: balance;
}

// 1. Remove the top margin for easier control as it avoids margin collapse.
// 2. Correct the font size <h1> elements within <section> and
//    <article> contexts in Chrome, Firefox, and Safari.

h1 {
  margin: 0 0 0.67em; // 1
  font-size: 2em; // 2
}

// Remove the top margin for easier control as it avoids margin collapse.

h2,
h3,
h4,
h5,
h6 {
  margin-top: 0;
}

// 1. Limit the inline size of paragraphs to 92 characters.
// 2. Remove the top margin to avoid margin collapse.
// 3. Set text-wrap to pretty if possible.

p {
  max-inline-size: 92ch; // 1
  margin-top: 0; // 2
  text-wrap: pretty; // 3
}

// Remove the top margin for easier control as it avoids margin collapse.
// Reset the side margins and change the bottom margin from `1em` to `1rem`.

blockquote,
figure,
dl,
ol,
ul {
  margin: 0 0 1rem;
}

// Normalize bold and strong

b,
strong {
  font-weight: bolder;
  line-height: inherit;
}

// Normalize small

small {
  font-size: 80%;
  line-height: inherit;
}

// Prevent `sub` and `sup` elements from affecting the line height in
// all browsers.

sub,
sup {
  position: relative;
  vertical-align: baseline;
  font-size: 75%;
  line-height: 0;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

// Correct the odd font size, inheritance, overflow and size scaling issues seen
// in some browsers when using `code`, `kbd`, `pre`, and `samp`, and add
// a better default font stack.

code,
kbd,
pre,
samp {
  $_code-font-stack: ui-monospace, Consolas, 'Liberation Mono', Menlo, monospace;

  @if meta.function-exists('font-stack', 'smth') and
    meta.global-variable-exists('font-stacks', 'smth') and
    map.has-key(smth.$font-stacks, 'monospace')
  {
    $_code-font-stack: smth.font-stack('monospace');
  }

  font-family: $_code-font-stack;
  font-size: 1em;
}

// 1. Dont't allow content to break outside
// 2. Remove top margin to avoid vertical margin collapse.
// 3. Having @viewport set causes scrollbars to overlap content in legacy Edge
// and IE11, so force a non-overlapping, non-auto-hiding scrollbar.

pre {
  overflow: auto; // 1
  margin: 0 0 1rem; // 2
  -ms-overflow-style: scrollbar; // 3
}

output {
  display: inline-block;
}

address {
  margin-bottom: 1rem;
  font-style: normal;
  line-height: inherit;
}

// 1. Remove the bottom border in Chrome 57-
// 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
// 3. Add explicit cursor to indicate behavior.

abbr[title] {
  border-bottom: none; // 1
  text-decoration: underline; // 2
  text-decoration: underline dotted; // 2
  cursor: help; // 3
}

// Render tables with collapsed borders and other improved defaults.

table {
  vertical-align: middle;
  border-spacing: 0;
  border-collapse: collapse;
  border-color: currentcolor;
  text-indent: 0;
  font-variant-numeric: tabular-nums;
}

// Matches default `<td>` alignment by inheriting from the `<body>`, or the
// closest parent with a set `text-align`.

th {
  text-align: inherit;
}

caption {
  padding: 0.75rem 0;
  color: hsl(208.24, 7.3%, 45.69%);
  caption-side: bottom;
  text-align: inherit;
}

// A better looking horizontal rule that looks the same in all browsers
// and inherits the color of the parent element's text so that it looks good
// by default on all background colors.

hr {
  display: block;
  overflow: hidden;
  box-sizing: content-box;
  height: 0;
  padding: 0;
  border: 0;
  border-top: 2px solid currentcolor;
  margin: 1em 0;
  color: inherit;
}

// Add the correct font style in Android 4.3-

dfn,
cite {
  font-style: italic;
}

// Undo browser default

dd {
  margin-bottom: 0.5rem;
  margin-left: 0;
}

// Remove the list-style for <ol> and <ul> elements used in <nav> elements.

menu,
nav ol,
nav ul,
footer ol,
footer ul {
  padding: 0;
  margin: 0;
  list-style: none;
}

// Remove the margin on nested detail lists in Chrome, Edge, IE, and Safari,
// on nested ordered and unordered lists in Edge 18- and IE.

dl dl,
dl ol,
dl ul,
ol dl,
ol ol,
ol ul,
ul dl,
ul ol,
ul ul {
  margin: 0;
}

// Prevent VoiceOver from ignoring list semantics in Safari

nav li::before {
  content: '\200B';
  float: left;
}

// Ensure dialog elements always displayed correctly.

dialog {
  position: absolute;
  right: 0;
  left: 0;
  display: block;
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
  height: -webkit-fit-content;
  height: -moz-fit-content;
  height: fit-content;
  padding: 1em;
  border: solid;
  margin: auto;
  background-color: if(
    meta.variable-exists('white') or
    meta.global-variable-exists('white', 'smth'),
    smth.$white,
    #fff
  );
  color: if(
    meta.global-variable-exists('off-black', 'smth'),
    smth.$off-black,
    #222
  );
}

// Ensures dialog elements without the 'open' attribute are not displayed and
// adds the correct display value for template elements in legacy Edge and IE.

dialog:not([open]),
template {
  display: none;
}


////////////////////////////////////////////////////////////////////////////////
// -------------------------------------------------------------------------- //
// #FORMS ------------------------------------------------------------------- //
// -------------------------------------------------------------------------- //
////////////////////////////////////////////////////////////////////////////////


// 1. Remove the margins on controls in Firefox and Safari.
// 2. Change the font styles on controls correctly across browsers.

button,
input,
optgroup,
select,
textarea {
  margin: 0; // 1
  font-family: inherit; // 2
  font-size: 100%; // 2
  line-height: 1.15; // 2
}

// Fix the inconsistent default appearance across browsers.

button,
input,
select,
textarea {
  padding: 0.25em 0.375em;
  border: 1px solid WindowFrame;
  background-color: rgba(0, 0, 0, 0);
  color: inherit;
  letter-spacing: inherit;
}

// Ensure the correct touch action for these elements across browsers.

a,
area,
button,
input,
label,
select,
summary,
textarea,
[tabindex] {
  touch-action: manipulation;
}

// 1. Ensure default cursor behavior on links.
// 2. Remove gaps in link underlines in iOS8+ and Safari 8+

a {
  cursor: pointer;
  -webkit-text-decoration-skip: objects;
}

// Show the overflow in legacy Edge (18-) and IE.

button,
input {
  overflow: visible;
}

// Remove the inheritance of text transform in Edge, Firefox, and IE.

button,
select {
  text-transform: none;
}

// Fix the inconsistent appearance across browsers.

select {
  padding-right: 1em;
  border-radius: 0;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: no-repeat right center / 1em;
}

// 1. Remove the default `border-radius` that macOS Chrome adds.
// 2. Correct the inability to style clickable types in iOS and Safari.

button,
[type='button'],
[type='reset'],
[type='submit'] {
  border-radius: 0; // 1
  -webkit-appearance: button; // 2
}

// Remove the inner border and padding on focused buttons in Firefox.

button::-moz-focus-inner,
[type='button']::-moz-focus-inner,
[type='reset']::-moz-focus-inner,
[type='submit']::-moz-focus-inner {
  padding: 0;
  border-style: none;
}

input:disabled,
select:disabled,
textarea:disabled {
  background-color: hsl(0, 0%, 90.2%);
  cursor: not-allowed;
}

[type='checkbox'],
[type='radio'] {
  box-sizing: border-box;
  padding: 0;
}

// Remove the default appearance of temporal inputs to avoid a Mobile Safari
// bug where setting a custom line-height prevents text from being vertically
// centered within the input.
// See https://bugs.webkit.org/show_bug.cgi?id=139848
// and https://github.com/twbs/bootstrap/issues/11266

input[type='date'],
input[type='time'],
input[type='datetime-local'],
input[type='month'] {
  -webkit-appearance: listbox;
}

// Ensure the same default "down arrow" to indicate available options
// in a select box

select:not([multiple], [size]) {
  background-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='4'%3E%3Cpath d='M4 0h6L7 4'/%3E%3C/svg%3E");
}

// Remove the default vertical scrollbar in IE 10+ and restric horizontal
// resizing in all browsers.

textarea {
  overflow: auto;
  resize: vertical;
}

// Reset fieldsets to make them behave more like a standard block element and
// not negatively affect page layout.
// See https://github.com/twbs/bootstrap/issues/12359
// and https://html.spec.whatwg.org/multipage/#the-fieldset-and-legend-elements

fieldset {
  min-width: 0;
  padding: 0;
  border: 0;
  margin: 0;
}

// Correct the text wrapping in Edge and IE and the color inheritance from
// <fieldset> elements in IE. Remove the padding so developers are not caught
// out when they zero out <fieldset> elements.

legend {
  display: block;
  width: 100%;
  max-width: 100%;
  padding: 0;
  margin-bottom: 0.5rem;
  color: inherit;
  font-size: 1.5rem;
  line-height: inherit;
  white-space: normal;
}

// Add the correct display in Edge 18- and IE, and correct the vertical
// alignment in Chrome, Firefox, and Opera.s

progress {
  display: inline-block;
  vertical-align: baseline;
}

// Mozilla focus rings can look a little bit closer to the element than the
// ring set in other browsers by `:focus-visible`. To normalize that, the
// `:-moz-focusring` selector comes after the standardized `:focus-visible`.
// TODO: Change the outline color to something that matches your design, or
//       change both rules to `outline:0` and create outlines with
//       `box-shadow` instead.

:focus-visible {
  outline: 2px solid #000;
  outline-offset: 3px;
}

:-moz-focusring {
  outline: 2px solid #000;
  outline-offset: 4px;
}

// Suppress the focus outline on elements that cannot be accessed via keyboard.
// This prevents an unwanted focus outline from appearing around elements that
// might still respond to pointer events.

[tabindex='-1']:focus {
  outline: 0 !important;
}

// Correct the text style of placeholders in Chrome, Edge, and Safari.

::-webkit-input-placeholder {
  color: inherit;
  opacity: 0.54;
}

::placeholder {
  color: rgba(0, 0, 0, 0.54);
}

// Correct the inability to style clickable types in iOS and Safari and change
// font properties to inherit in Safari.

::-webkit-file-upload-button {
  -webkit-appearance: button;
  font: inherit;
}

// Fix inconsistent behavior in Legacy Edge and IE

::-ms-expand {
  display: none;
}

// Remove the additional :invalid styles in Firefox.

:-moz-ui-invalid {
  box-shadow: none;
}

:-moz-submit-invalid {
  box-shadow: none;
}

:invalid {
  box-shadow: none;
}

// Correct the cursor style of increment and decrement buttons in Chrome.

[type='number']::-webkit-inner-spin-button,
[type='number']::-webkit-outer-spin-button {
  height: auto;
}

// Correct the appearance in Chrome and Safari and the outline style in Safari.

[type='search'] {
  -webkit-appearance: none;
  -webkit-appearance: textfield;
  outline-offset: -2px;
}

// Remove the inner padding on search cancel buttons and search decorations in
// Chrome and Safari on macOS.

[type='search']::-webkit-search-cancel-button,
[type='search']::-webkit-search-decoration {
  -webkit-appearance: none;
}


////////////////////////////////////////////////////////////////////////////////
// -------------------------------------------------------------------------- //
// #EMBEDDED MEDIA AND OTHER CONTENT ---------------------------------------- //
// -------------------------------------------------------------------------- //
////////////////////////////////////////////////////////////////////////////////


// Make maintaining media aspect-ratios simple

audio,
canvas,
embed,
iframe,
img,
input,
object,
select,
textarea,
video {
  max-width: 100%;
  height: auto;
}

// Remove the gap between audio, canvas, iframes, images, videos and the bottom
// of their containers: https://github.com/h5bp/html5-boilerplate/issues/440

audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle;
}

canvas,
details,
img,
svg,
video {
  display: block;
}

// The styles necessary for the most optimized <img> defaults.
// The other styles associated with img are grouped with other selectors.

img {
  border-style: none;
  background-size: cover;
  background-repeat: no-repeat;
  image-rendering: smooth;
  font-style: italic;
  shape-margin: 1rem;
}

// Remove the border on iframes in all browsers.

iframe {
  border: 0;
}

:where(details > summary:first-of-type) {
  display: list-item;
}

// Hide the overflow in legacy Edge and IE.

svg:not(:root) {
  overflow: hidden;
}

// Ensure SVGs without fill attributes inherit color correctly.

svg:not([fill]) {
  fill: currentcolor;
}


////////////////////////////////////////////////////////////////////////////////
// -------------------------------------------------------------------------- //
// #ACCESSIBILITY - ARIA PROPERTIES ----------------------------------------- //
// -------------------------------------------------------------------------- //
////////////////////////////////////////////////////////////////////////////////


// Add cursor defaults for relevant attributes.

[aria-busy='true'] {
  cursor: progress;
}

[aria-controls] {
  cursor: pointer;
}

// Change the cursor on disabled, not-editable, or otherwise
// inoperable elements in all browsers.

[aria-disabled='true'],
[disabled] {
  cursor: not-allowed;
}

// Change the display on visually hidden accessible elements
// in all browsers (opinionated).

[aria-hidden='false'][hidden] {
  display: initial;
}

[aria-hidden='false'][hidden]:not(:focus) {
  position: absolute;
  clip: rect(0, 0, 0, 0);
}


////////////////////////////////////////////////////////////////////////////////
// -------------------------------------------------------------------------- //
// #UTILITIES --------------------------------------------------------------- //
// -------------------------------------------------------------------------- //
////////////////////////////////////////////////////////////////////////////////


// Hide visually and from screen readers. It is recommended that you use the
// HTML attribute [hidden] rather than a .hidden class for accessibility.

[hidden] {
  display: none !important;
}

// For Screen Readers Only - Hide visually but not from screen readers.
// https://snook.ca/archives/html_and_css/hiding-content-for-accessibility

.sr-only,
.sr-only-focusable,
.visually-hidden,
.visually-hidden-focusable {
  @include smth.hide-visually;
}

// Extends the `.visually-hidden` and `.sr-only` classes to allow
// the element to be focusable when navigated to via the keyboard:
// https://www.drupal.org/node/897638

.sr-only-focusable,
.visually-hidden-focusable {
  @include smth.hide-visually-focusable;
}

// Hide visually and from screen readers, but maintain layout

.invisible {
  visibility: hidden;
}

.clearfix {
  @include smth.clearfix;
}

// Modern float clearing without clearfix hack.
// Chrome 58+, Safari 13+, Firefox 53+

.group {
  display: flow-root;
  overflow: clip;
}

// A quick way to apply flex-based horizontal and vertical centering
// to an element from the HTML.

.flex-center {
  @include smth.flex-center;
}

// Toggle off an active animation by applying this class with JavaScript

.anim-off {
  animation: none !important;
}

/// The last rule is only needed if your project uses a JS framework or library
/// like React. You want the selector of this rule to select the top level
/// element that your application is rendered within. It ensures that
/// high-priority elements will show up above all others and prevents stacking
/// context bugs and common z-index issues.
///
/// @todo If not using React or something similar, delete this rule and comment.
/// If you are going to use the rule, just delete this todo (or entire comment).

#root,
#__next {
  isolation: isolate;
}
